// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Posrtgre;

#nullable disable

namespace Posrtgre.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "pg_catalog", "adminpack");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Posrtgre.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("brand_name");

                    b.HasKey("BrandId")
                        .HasName("brand_pkey");

                    b.ToTable("brand", (string)null);
                });

            modelBuilder.Entity("Posrtgre.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<int?>("ModelId")
                        .HasColumnType("integer")
                        .HasColumnName("model_id");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("car_pkey");

                    b.HasIndex("BrandId");

                    b.HasIndex("ModelId");

                    b.HasIndex(new[] { "ColorId" }, "fki_color");

                    b.ToTable("car", (string)null);
                });

            modelBuilder.Entity("Posrtgre.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("color_name");

                    b.HasKey("ColorId")
                        .HasName("color_pkey");

                    b.ToTable("color", (string)null);
                });

            modelBuilder.Entity("Posrtgre.ModelBrand", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("model_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModelId"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer")
                        .HasColumnName("brand_id");

                    b.Property<string>("ModelName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("model_name");

                    b.HasKey("ModelId")
                        .HasName("model_brand_pkey");

                    b.HasIndex(new[] { "BrandId" }, "fki_и");

                    b.ToTable("model_brand", (string)null);
                });

            modelBuilder.Entity("Posrtgre.Car", b =>
                {
                    b.HasOne("Posrtgre.Brand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("brand_id");

                    b.HasOne("Posrtgre.Color", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("color");

                    b.HasOne("Posrtgre.ModelBrand", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .HasConstraintName("model_id");

                    b.Navigation("Brand");

                    b.Navigation("Color");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("Posrtgre.ModelBrand", b =>
                {
                    b.HasOne("Posrtgre.Brand", "Brand")
                        .WithMany("ModelBrands")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("brand");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Posrtgre.Brand", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("ModelBrands");
                });

            modelBuilder.Entity("Posrtgre.Color", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Posrtgre.ModelBrand", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
